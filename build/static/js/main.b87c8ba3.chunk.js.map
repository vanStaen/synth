{"version":3,"sources":["store/store.tsx","helper/noteToFrequency.ts","component/note/note.tsx","helper/createAllNotes.ts","component/keyboard/Keyboard.tsx","logos/knob.svg","component/knob/Knob.tsx","App.tsx","index.tsx"],"names":["noteStore","notes","makeObservable","this","observable","addNote","action","freq","name","noteGain","sinOsc","sinGain","squareOsc","squareGain","whiteNoise","whiteNoiseGain","note","push","noteToFreqConvertionTable","C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B","noteToFrequency","octave","audioContext","primaryfilter","sineVolume","squareVolume","noiseVolume","createGain","gain","setValueAtTime","connect","createOscillator","frequency","type","start","buffer","createBuffer","sampleRate","channelData","getChannelData","i","length","Math","random","resume","createBufferSource","loop","listOfNotes","keyboardToNote","Keyboard","playNoteHandler","stopNoteHandler","useEffect","keydownhandler","e","keyPressed","key","toLowerCase","element","document","getElementById","includes","classList","add","keyuphandler","remove","addEventListener","removeEventListener","className","id","onMouseDown","onMouseUp","onMouseLeave","Knob","value","knobName","valueSetter","useState","showValue","setShowValue","onMouseEnter","src","knob","alt","toFixed","App","mainVolume","setMainVolume","setNoiseVolume","setSineVolume","fitlerFreq","setFitlerFreq","AudioContext","primaryGainControl","destination","createBiquadFilter","forEach","noteToCreate","console","log","createAllNotes","noteArray","find","currentTime","exponentialRampToValueAtTime","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b87c8ba3.chunk.js","sourcesContent":["import { action, makeObservable, observable } from \"mobx\";\n\nexport interface noteData {\n    freq: number,\n    name: string,\n    noteGain: GainNode,\n    sinOsc: OscillatorNode,\n    sinGain: GainNode,\n    squareOsc: OscillatorNode,\n    squareGain: GainNode,\n    whiteNoise: AudioBufferSourceNode,\n    whiteNoiseGain: GainNode\n};\n\nexport class NoteStoreImplementation {\n\n    notes: noteData[] = [];\n\n    constructor() {\n        makeObservable(this, {\n            notes: observable,\n            addNote: action,\n        });\n    }\n\n    addNote(\n        freq: number,\n        name: string,\n        noteGain: GainNode,\n        sinOsc: OscillatorNode,\n        sinGain: GainNode,\n        squareOsc: OscillatorNode,\n        squareGain: GainNode,\n        whiteNoise: AudioBufferSourceNode,\n        whiteNoiseGain: GainNode) {\n\n        const note: noteData = {\n            freq: freq,\n            name: name,\n            noteGain: noteGain,\n            sinOsc: sinOsc,\n            sinGain: sinGain,\n            squareOsc: squareOsc,\n            squareGain: squareGain,\n            whiteNoise: whiteNoise,\n            whiteNoiseGain: whiteNoiseGain\n        }\n\n        this.notes.push(note);\n    }\n}\n\nexport const noteStore = new NoteStoreImplementation();\n","type notesInAnOctave = [\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number\n];\n\nexport const noteToFreqConvertionTable: { [note: string]: notesInAnOctave } = {\n  C: [16.35, 32.7, 65.41, 130.81, 261.63, 523.25, 1046.5, 2093.0],\n  Db: [17.32, 34.65, 69.3, 138.59, 277.18, 554.37, 1108.73, 2217.46],\n  D: [18.35, 36.71, 73.42, 146.83, 293.66, 587.33, 1174.66, 2349.32],\n  Eb: [19.45, 38.89, 77.78, 155.56, 311.13, 622.25, 1244.51, 2489.02],\n  E: [20.6, 41.2, 82.41, 164.81, 329.63, 659.26, 1318.51, 2637.02],\n  F: [21.83, 43.65, 87.31, 174.61, 349.23, 698.46, 1396.91, 2793.83],\n  Gb: [23.12, 46.25, 92.5, 185.0, 369.99, 739.99, 1479.98, 2959.96],\n  G: [24.5, 49.0, 98.0, 196.0, 392.0, 783.99, 1567.98, 3135.96],\n  Ab: [25.96, 51.91, 103.83, 207.65, 415.3, 830.61, 1661.22, 3322.44],\n  A: [27.5, 55.0, 110.0, 220.0, 440.0, 880.0, 1760.0, 3520.0],\n  Bb: [29.14, 58.27, 116.54, 233.08, 466.16, 932.33, 1864.66, 3729.31],\n  B: [30.87, 61.74, 123.47, 246.94, 493.88, 987.77, 1975.53, 3951.07],\n};\n\nexport function noteToFrequency(note: string, octave: number) {\n  const frequency = noteToFreqConvertionTable[note][octave - 1];\n  return frequency;\n}\n","import { NoteStoreImplementation } from '../../store/store'\n\ntype noteProps = {\n    freq: number,\n    name: string,\n    audioContext: AudioContext,\n    primaryfilter: BiquadFilterNode,\n    sineVolume: number,\n    squareVolume: number,\n    noiseVolume: number,\n    noteStore: NoteStoreImplementation,\n};\n\nexport const note = ({ freq, name, audioContext, primaryfilter, sineVolume, squareVolume, noiseVolume, noteStore }: noteProps) => {\n\n    //Gain\n    const noteGain = audioContext.createGain();\n    noteGain.gain.setValueAtTime(0, 0);\n    noteGain.connect(primaryfilter);\n\n    //Sinus\n    const sinGain = audioContext.createGain();\n    sinGain.gain.setValueAtTime(sineVolume, 0);\n    sinGain.connect(noteGain);\n    const sinOsc = audioContext.createOscillator();\n    sinOsc.frequency.setValueAtTime(freq, 0);\n    sinOsc.type = 'sine';\n    sinOsc.connect(sinGain);\n    sinOsc.start();\n\n    //Square\n    const squareGain = audioContext.createGain();\n    squareGain.gain.setValueAtTime(squareVolume, 0);\n    squareGain.connect(noteGain);\n    const squareOsc = audioContext.createOscillator();\n    squareOsc.frequency.setValueAtTime(freq, 0);\n    squareOsc.type = 'square';\n    squareOsc.connect(squareGain);\n    squareOsc.start();\n\n    //Noise\n    const buffer = audioContext.createBuffer(\n        1,\n        audioContext.sampleRate * 1,\n        audioContext.sampleRate\n    );\n    const channelData = buffer.getChannelData(0);\n    for (let i = 0; i < buffer.length; i++) {\n        channelData[i] = Math.random() * 2 - 1;\n    }\n    audioContext.resume();\n    const whiteNoiseGain = audioContext.createGain();\n    whiteNoiseGain.gain.setValueAtTime(noiseVolume, 0);\n    whiteNoiseGain.connect(noteGain);\n    const whiteNoise = audioContext.createBufferSource();\n    whiteNoise.buffer = buffer;\n    whiteNoise.connect(whiteNoiseGain);\n    whiteNoise.loop = true;\n    whiteNoise.start();\n\n\n    // Add to the Store\n    noteStore.addNote(\n        freq,\n        name,\n        noteGain,\n        sinOsc,\n        sinGain,\n        squareOsc,\n        squareGain,\n        whiteNoise,\n        whiteNoiseGain)\n\n}","import { noteToFrequency } from './noteToFrequency';\nimport { note } from \"../component/note/note\";\nimport { noteStore } from '../store/store';\n\nexport const listOfNotes: string[] = [\n    \"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\",\n];\n\ntype noteProps = {\n    audioContext: AudioContext,\n    primaryfilter: BiquadFilterNode,\n    sineVolume: number,\n    squareVolume: number,\n    noiseVolume: number,\n};\n\nexport default function createAllNotes({ audioContext, primaryfilter, sineVolume, squareVolume, noiseVolume }: noteProps) {\n    listOfNotes.forEach((noteToCreate) => {\n        let octave;\n        for (octave = 1; octave < 9; octave++) {\n            note({\n                freq: noteToFrequency(noteToCreate, octave),\n                name: `${noteToCreate}${octave}`,\n                audioContext: audioContext,\n                primaryfilter: primaryfilter,\n                sineVolume: sineVolume,\n                squareVolume: squareVolume,\n                noiseVolume: noiseVolume,\n                noteStore: noteStore,\n            })\n            console.log(\"note created\", `${noteToCreate}${octave}`, noteToFrequency(noteToCreate, 3));\n        }\n    })\n}","import \"./Keyboard.css\";\nimport { noteToFrequency } from \"../../helper/noteToFrequency\";\nimport { useEffect } from \"react\";\n\nconst notes: { [note: string]: string } = {\n  \"Aflat\": \"Ab\",\n  \"A\": \"A\",\n  \"Asharp\": \"Bb\",\n  \"Bflat\": \"Bb\",\n  \"B\": \"B\",\n  \"C\": \"C\",\n  \"Csharp\": \"Db\",\n  \"Dflat\": \"Db\",\n  \"D\": \"D\",\n  \"Dsharp\": \"Eb\",\n  \"Eflat\": \"Eb\",\n  \"E\": \"E\",\n  \"F\": \"F\",\n  \"Fsharp\": \"Gb\",\n  \"Gflat\": \"Gb\",\n  \"G\": \"G\",\n  \"Gsharp\": \"Ab\",\n}\n\nconst keyboardToNote: { [key: string]: string } = {\n  \"a\": \"C\",\n  \"w\": \"Csharp\",\n  \"s\": \"D\",\n  \"e\": \"Dsharp\",\n  \"d\": \"E\",\n  \"f\": \"F\",\n  \"t\": \"Fsharp\",\n  \"g\": \"G\",\n  \"z\": \"Gsharp\",\n  \"h\": \"A\",\n  \"u\": \"Asharp\",\n  \"j\": \"B\",\n}\n\ntype KeyboardProps = {\n  playNoteHandler: (freq: number) => void;\n  stopNoteHandler: (freq: number) => void;\n  octave: number;\n};\n\nconst Keyboard = ({ playNoteHandler, stopNoteHandler, octave }: KeyboardProps) => {\n\n  const handleKeyPress = () => {\n    const keydownhandler = (e: KeyboardEvent) => {\n      const keyPressed = e.key.toLowerCase();\n      if (keyPressed in keyboardToNote) {\n        var element = document.getElementById(keyboardToNote[keyPressed]);\n        element && (keyboardToNote[keyPressed].includes(\"sharp\") ?\n          element.classList.add(\"black__pressed\") :\n          element.classList.add(\"white__pressed\"))\n        playNoteHandler(noteToFrequency(notes[keyboardToNote[keyPressed]], octave));\n      }\n    };\n\n    const keyuphandler = (e: KeyboardEvent) => {\n      const keyPressed = e.key.toLowerCase();\n      if (keyPressed in keyboardToNote) {\n        var element = document.getElementById(keyboardToNote[keyPressed]);\n        element && (keyboardToNote[keyPressed].includes(\"sharp\") ?\n          element.classList.remove(\"black__pressed\") :\n          element.classList.remove(\"white__pressed\"))\n        stopNoteHandler(noteToFrequency(notes[keyboardToNote[keyPressed]], octave));\n      }\n    };\n\n    document.addEventListener(\"keydown\", keydownhandler);\n    document.addEventListener(\"keyup\", keyuphandler);\n\n    // cleanup function\n    return () => {\n      document.removeEventListener(\"keydown\", keydownhandler);\n      document.removeEventListener(\"keyup\", keyuphandler);\n    };\n  };\n\n  useEffect(handleKeyPress);\n\n  return (\n    <div>\n      <ul className=\"set\">\n        <li\n          id=\"C\"\n          className=\"white e\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"C\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"C\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"C\"], octave))}\n        ></li>\n        <li\n          id=\"Csharp\"\n          className=\"black ds\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"Csharp\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"Csharp\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"Csharp\"], octave))}\n        ></li>\n        <li\n          id=\"D\"\n          className=\"white d\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"D\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"D\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"D\"], octave))}\n        ></li>\n        <li\n          id=\"Dsharp\"\n          className=\"black cs\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"Dsharp\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"Dsharp\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"Dsharp\"], octave))}\n        ></li>\n        <li\n          id=\"E\"\n          className=\"white c\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"E\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"E\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"E\"], octave))}\n        ></li>\n        <li\n          id=\"F\"\n          className=\"white b\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"F\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"F\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"F\"], octave))}\n        ></li>\n        <li\n          id=\"Fsharp\"\n          className=\"black as\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"Fsharp\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"Fsharp\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"Fsharp\"], octave))}\n        ></li>\n        <li\n          id=\"G\"\n          className=\"white a\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"G\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"G\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"G\"], octave))}\n        ></li>\n        <li\n          id=\"Gsharp\"\n          className=\"black gs\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"Gsharp\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"Gsharp\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"Gsharp\"], octave))}\n        ></li>\n        <li\n          id=\"A\"\n          className=\"white g\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"A\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"A\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"A\"], octave))}\n        ></li>\n        <li\n          id=\"Asharp\"\n          className=\"black fs\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"Asharp\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"Asharp\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"Asharp\"], octave))}\n        ></li>\n        <li\n          id=\"B\"\n          className=\"white f\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"B\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"B\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"B\"], octave))}\n        ></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Keyboard;\n","export default __webpack_public_path__ + \"static/media/knob.8deadf84.svg\";","import { useState } from 'react';\nimport knob from '../../logos/knob.svg';\nimport \"./Knob.css\";\n\ntype KnobProps = {\n    value: number,\n    valueSetter: (value: number) => void,\n    knobName: string,\n};\n\nconst Knob = ({ value, valueSetter, knobName }: KnobProps) => {\n\n    const [showValue, setShowValue] = useState(false);\n    const [knobAngle, setKnobAngle] = useState(0);\n\n    // mouse down : position merken\n    // mouse move : diff mousedown zum aktuell\n    // mouse move : rechent final position + wert für setter\n    // Debounce (für input)\n    // z.B 300px oder % vom display höhe\n    // css use \"rotate\"\n\n    return (\n        <div\n            className=\"knob\"\n            onMouseEnter={() => setShowValue(true)}\n            onMouseLeave={() => setShowValue(false)}\n        >\n\n            <img src={knob} alt=\"knob\" className=\"knob__logo\" />\n            {showValue ?\n                (<span className=\"knob__value\">{(value * 10).toFixed(2)}</span>) :\n                knobName.length === 1 ?\n                    (<span className=\"knob__specialchar\" >{knobName}</span>) :\n                    (<span className=\"knob__name\" >{knobName}</span>)\n            }\n        </div>\n    )\n}\n\nexport default Knob;","import { useEffect, useState } from \"react\";\nimport { noteStore } from \"./store/store\";\nimport createAllNotes from \"./helper/createAllNotes\";\nimport Keyboard from \"./component/keyboard/Keyboard\";\nimport Knob from \"./component/knob/Knob\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [octave, setOctave] = useState(5);\n  const [mainVolume, setMainVolume] = useState(0.05);\n  const [noiseVolume, setNoiseVolume] = useState(.5);\n  const [sineVolume, setSineVolume] = useState(1);\n  const [squareVolume, setSquareVolume] = useState(1)\n  const [fitlerFreq, setFitlerFreq] = useState(5000); // from 25hz to 25000hz\n\n  const audioContext = new AudioContext();\n\n  // Create a Gain control (Master Volume)\n  const primaryGainControl = audioContext.createGain();\n  primaryGainControl.gain.setValueAtTime(mainVolume, 0);\n  primaryGainControl.connect(audioContext.destination);\n\n  // Create a filter (LP)\n  const primaryfilter = audioContext.createBiquadFilter();\n  primaryfilter.type = \"lowpass\";\n  primaryfilter.frequency.value = fitlerFreq;\n  primaryfilter.connect(primaryGainControl);\n\n  useEffect(() => {\n    // Create all notes\n    createAllNotes({ audioContext, primaryfilter, sineVolume, squareVolume, noiseVolume });\n  }, [])\n\n  const playNoteHandler = (freq: number) => {\n    audioContext.resume();\n    const noteArray = noteStore.notes.find(note => note.freq == freq);\n    if (noteArray) {\n      const noteGain = noteArray.noteGain;\n      noteGain.gain.setValueAtTime(1, 0);\n    }\n  };\n\n  const stopNoteHandler = (freq: number) => {\n    const noteArray = noteStore.notes.find(note => note.freq == freq);\n    if (noteArray) {\n      const noteGain = noteArray.noteGain;\n      noteGain.gain.setValueAtTime(noteGain.gain.value, audioContext.currentTime);\n      noteGain.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + 0.03);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p> </p>\n        <div>\n          <Knob value={mainVolume} valueSetter={setMainVolume} knobName=\"Volume\" />\n          <Knob value={noiseVolume} valueSetter={setNoiseVolume} knobName=\"Noise\" />\n          <Knob value={sineVolume} valueSetter={setSineVolume} knobName=\"∿\" />\n          <Knob value={fitlerFreq} valueSetter={setFitlerFreq} knobName=\"LP Filter\" />\n        </div>\n        <Keyboard\n          playNoteHandler={playNoteHandler}\n          stopNoteHandler={stopNoteHandler}\n          octave={octave}\n        />\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}