{"version":3,"sources":["helper/noteToFrequency.ts","component/keyboard/Keyboard.tsx","component/knob/knob.svg","component/knob/Knob.tsx","App.tsx","index.tsx"],"names":["noteToFreqConvertionTable","C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B","noteToFrequency","note","octave","notes","keyboardToNote","Keyboard","playNoteHandler","stopNoteHandler","useEffect","keydownhandler","e","keyPressed","key","toLowerCase","element","document","getElementById","includes","classList","add","keyuphandler","remove","addEventListener","removeEventListener","className","id","onMouseDown","onMouseUp","onMouseLeave","Knob","value","knobName","valueSetter","useState","showValue","setShowValue","onMouseEnter","src","knob","alt","toFixed","length","App","mainVolume","setMainVolume","noiseVolume","setNoiseVolume","sineVolume","setSineVolume","fitlerFreq","setFitlerFreq","audioContext","AudioContext","primaryGainControl","createGain","gain","setValueAtTime","connect","destination","primaryfilter","createBiquadFilter","type","frequency","noteGainMap","Map","freq","has","resume","noteGain","sinGain","sinOscillator","createOscillator","start","buffer","createBuffer","sampleRate","channelData","getChannelData","i","Math","random","noiseGain","whiteNoiseSource","createBufferSource","set","get","currentTime","exponentialRampToValueAtTime","delete","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.170327a0.chunk.js","sourcesContent":["type notesInAnOctave = [\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number\n];\n\nconst noteToFreqConvertionTable: { [note: string]: notesInAnOctave } = {\n  C: [16.35, 32.7, 65.41, 130.81, 261.63, 523.25, 1046.5, 2093.0],\n  Db: [17.32, 34.65, 69.3, 138.59, 277.18, 554.37, 1108.73, 2217.46],\n  D: [18.35, 36.71, 73.42, 146.83, 293.66, 587.33, 1174.66, 2349.32],\n  Eb: [19.45, 38.89, 77.78, 155.56, 311.13, 622.25, 1244.51, 2489.02],\n  E: [20.6, 41.2, 82.41, 164.81, 329.63, 659.26, 1318.51, 2637.02],\n  F: [21.83, 43.65, 87.31, 174.61, 349.23, 698.46, 1396.91, 2793.83],\n  Gb: [23.12, 46.25, 92.5, 185.0, 369.99, 739.99, 1479.98, 2959.96],\n  G: [24.5, 49.0, 98.0, 196.0, 392.0, 783.99, 1567.98, 3135.96],\n  Ab: [25.96, 51.91, 103.83, 207.65, 415.3, 830.61, 1661.22, 3322.44],\n  A: [27.5, 55.0, 110.0, 220.0, 440.0, 880.0, 1760.0, 3520.0],\n  Bb: [29.14, 58.27, 116.54, 233.08, 466.16, 932.33, 1864.66, 3729.31],\n  B: [30.87, 61.74, 123.47, 246.94, 493.88, 987.77, 1975.53, 3951.07],\n};\n\nexport default function noteToFrequency(note: string, octave: number) {\n  const frequency = noteToFreqConvertionTable[note][octave];\n  return frequency;\n}\n","import \"./Keyboard.css\";\nimport noteToFrequency from \"../../helper/noteToFrequency\";\nimport { useEffect } from \"react\";\n\nconst notes: { [note: string]: string } = {\n  \"Aflat\" : \"Ab\",\n  \"A\" : \"A\",\n  \"Asharp\" : \"Bb\",\n  \"Bflat\" : \"Bb\",\n  \"B\" : \"B\",\n  \"C\" : \"C\",\n  \"Csharp\" : \"Db\",\n  \"Dflat\" : \"Db\",\n  \"D\" : \"D\",\n  \"Dsharp\" : \"Eb\",\n  \"Eflat\" : \"Eb\",\n  \"E\" : \"E\",\n  \"F\" : \"F\",\n  \"Fsharp\" : \"Gb\",\n  \"Gflat\" : \"Gb\",\n  \"G\" : \"G\",\n  \"Gsharp\" : \"Ab\",\n}\n\nconst keyboardToNote: { [key: string]: string } = {\n  \"a\" : \"C\",\n  \"w\" : \"Csharp\",\n  \"s\" : \"D\",\n  \"e\" : \"Dsharp\",\n  \"d\" : \"E\",\n  \"f\" : \"F\",\n  \"t\" : \"Fsharp\",\n  \"g\" : \"G\",\n  \"z\" : \"Gsharp\",\n  \"h\" : \"A\",\n  \"u\" : \"Asharp\",\n  \"j\" : \"B\",\n}\n\ntype KeyboardProps = {\n  playNoteHandler: (freq: number) => void;\n  stopNoteHandler: (freq: number) => void;\n  octave: number;\n};\n\nconst Keyboard = ({ playNoteHandler, stopNoteHandler, octave }: KeyboardProps) => {\n\n  const handleKeyPress = () => {\n    const keydownhandler = (e: KeyboardEvent) => {\n      const keyPressed = e.key.toLowerCase();\n      if (keyPressed in keyboardToNote) {\n        var element = document.getElementById(keyboardToNote[keyPressed]);\n        element && ( keyboardToNote[keyPressed].includes(\"sharp\") ? \n        element.classList.add(\"black__pressed\") : \n        element.classList.add(\"white__pressed\") )\n        playNoteHandler(noteToFrequency(notes[keyboardToNote[keyPressed]], octave));\n      }\n    };\n\n    const keyuphandler = (e: KeyboardEvent) => {\n      const keyPressed = e.key.toLowerCase();\n      if (keyPressed in keyboardToNote) {\n        var element = document.getElementById(keyboardToNote[keyPressed]);\n        element && ( keyboardToNote[keyPressed].includes(\"sharp\") ? \n        element.classList.remove(\"black__pressed\") :\n        element.classList.remove(\"white__pressed\") )\n        stopNoteHandler(noteToFrequency(notes[keyboardToNote[keyPressed]], octave));\n      }\n    };\n\n    document.addEventListener(\"keydown\", keydownhandler);\n    document.addEventListener(\"keyup\", keyuphandler);\n\n    // cleanup function\n    return () => {\n      document.removeEventListener(\"keydown\", keydownhandler);\n      document.removeEventListener(\"keyup\", keyuphandler);\n    };\n  };\n\n  useEffect(handleKeyPress);\n\n  return (\n    <div>\n      <ul className=\"set\">\n        <li\n          id=\"C\"\n          className=\"white e\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"C\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"C\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"C\"], octave))}\n        ></li>\n        <li\n          id=\"Csharp\"\n          className=\"black ds\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"Csharp\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"Csharp\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"Csharp\"], octave))}\n        ></li>\n        <li\n          id=\"D\"\n          className=\"white d\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"D\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"D\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"D\"], octave))}\n        ></li>\n        <li\n          id=\"Dsharp\"\n          className=\"black cs\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"Dsharp\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"Dsharp\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"Dsharp\"], octave))}\n        ></li>\n        <li\n          id=\"E\"\n          className=\"white c\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"E\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"E\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"E\"], octave))}\n        ></li>\n        <li\n          id=\"F\"\n          className=\"white b\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"F\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"F\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"F\"], octave))}\n        ></li>\n        <li\n          id=\"Fsharp\"\n          className=\"black as\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"Fsharp\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"Fsharp\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"Fsharp\"], octave))}\n        ></li>\n        <li\n          id=\"G\"\n          className=\"white a\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"G\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"G\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"G\"], octave))}\n        ></li>\n        <li\n          id=\"Gsharp\"\n          className=\"black gs\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"Gsharp\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"Gsharp\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"Gsharp\"], octave))}\n        ></li>\n        <li\n          id=\"A\"\n          className=\"white g\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"A\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"A\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"A\"], octave))}\n        ></li>\n        <li\n          id=\"Asharp\"\n          className=\"black fs\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"Asharp\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"Asharp\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"Asharp\"], octave))}\n        ></li>\n        <li\n          id=\"B\"\n          className=\"white f\"\n          onMouseDown={() => playNoteHandler(noteToFrequency(notes[\"B\"], octave))}\n          onMouseUp={() => stopNoteHandler(noteToFrequency(notes[\"B\"], octave))}\n          onMouseLeave={() => stopNoteHandler(noteToFrequency(notes[\"B\"], octave))}\n        ></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Keyboard;\n","export default __webpack_public_path__ + \"static/media/knob.8deadf84.svg\";","import { useState } from 'react';\nimport knob from './knob.svg';\nimport \"./Knob.css\";\n\ntype KnobProps = {\n    value: number;\n    valueSetter: (value: number) => void;\n    knobName: string;\n  };\n\nconst Knob  = ({ value, valueSetter, knobName }: KnobProps) => {\n\n    const [showValue, setShowValue] = useState(false);\n\n    return (\n        <div \n            className=\"knob\"        \n            onMouseEnter={() => setShowValue(true)}\n            onMouseLeave={() => setShowValue(false)}\n        >\n            <img src={knob} alt=\"knob\" className=\"knob__logo\"/>\n            {showValue ? \n                (<span className=\"knob__value\">{(value*10).toFixed(2)}</span>) : \n                    knobName.length === 1 ?\n                        (<span className=\"knob__specialchar\" >{knobName}</span>) :\n                        (<span className=\"knob__name\" >{knobName}</span>)\n            }\n        </div>\n    )\n}\n\nexport default Knob;","import { useState } from \"react\";\nimport Keyboard from \"./component/keyboard/Keyboard\";\nimport Knob from \"./component/knob/Knob\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [octave, setOctave] = useState(4);\n  const [mainVolume, setMainVolume] = useState(0.05);\n  const [noiseVolume, setNoiseVolume] = useState(.7);\n  const [sineVolume, setSineVolume] = useState(1);\n  const [fitlerFreq, setFitlerFreq] = useState(5000); // from 25hz to 25000hz\n\n  const audioContext = new AudioContext();\n\n  // Create a Gain control (Master Volume)\n  const primaryGainControl = audioContext.createGain();\n  primaryGainControl.gain.setValueAtTime(mainVolume, 0);\n  primaryGainControl.connect(audioContext.destination);\n\n  // Create a filter (LP)\n  const primaryfilter = audioContext.createBiquadFilter();\n  primaryfilter.type = \"lowpass\";\n  primaryfilter.frequency.value = fitlerFreq;\n  primaryfilter.connect(primaryGainControl);\n\n\n  const noteGainMap = new Map();\n\n  const playNoteHandler = (freq: number) => {\n    if (!noteGainMap.has(freq)) {\n      audioContext.resume();\n\n      //Gain\n      const noteGain = audioContext.createGain();\n      noteGain.gain.setValueAtTime(sineVolume, 0);\n      noteGain.connect(primaryfilter);\n\n      //Sinus\n      const sinGain = audioContext.createGain();\n      sinGain.gain.setValueAtTime(sineVolume, 0);\n      sinGain.connect(primaryfilter);\n      const sinOscillator = audioContext.createOscillator();\n      sinOscillator.frequency.setValueAtTime(freq, 0);\n      sinOscillator.connect(noteGain);\n      sinOscillator.start();\n\n      //Noise\n      const buffer = audioContext.createBuffer(\n        1,\n        audioContext.sampleRate * 1,\n        audioContext.sampleRate\n      );\n      const channelData = buffer.getChannelData(0);\n      for (let i = 0; i < buffer.length; i++) {\n        channelData[i] = Math.random() * 2 - 1;\n      }\n      audioContext.resume();\n      const noiseGain = audioContext.createGain();\n      noiseGain.gain.setValueAtTime(noiseVolume, 0);\n      noiseGain.connect(noteGain);\n      const whiteNoiseSource = audioContext.createBufferSource();\n      whiteNoiseSource.buffer = buffer;\n      whiteNoiseSource.connect(noiseGain);\n      whiteNoiseSource.start();\n\n      // noteGainMap\n      noteGainMap.set(freq, noteGain);\n    }\n  };\n\n  const stopNoteHandler = (freq: number) => {\n    if (noteGainMap.has(freq)) {\n      const noteGain = noteGainMap.get(freq);\n      noteGain.gain.setValueAtTime(noteGain.gain.value,audioContext.currentTime);\n      noteGain.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + 0.03);\n      noteGainMap.delete(freq);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p> </p>\n        <div>\n          <Knob value={mainVolume} valueSetter={setMainVolume} knobName=\"Volume\"/>\n          <Knob value={noiseVolume} valueSetter={setNoiseVolume} knobName=\"Noise\"/>\n          <Knob value={sineVolume} valueSetter={setSineVolume} knobName=\"∿\"/>\n          <Knob value={fitlerFreq} valueSetter={setFitlerFreq} knobName=\"LP Filter\"/>\n        </div>\n        <Keyboard\n          playNoteHandler={playNoteHandler}\n          stopNoteHandler={stopNoteHandler}\n          octave={octave}\n        />\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}